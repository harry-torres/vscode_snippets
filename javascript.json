{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// ${1/(.*)/${1:/downcase}/}, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// 	"Print to console": {
	// 		"prefix": "log",
	// 		"body": [
	// 			"console.log('$');",
	// 			"console.log('${1/(.*)/${1:/downcase}/}');",
	// 			"$2"
	// 		],
	// 		"description": "Log output to console"
	// 	},"test": {
	//     "prefix": "test",
	//     // "body": "${1} -> ${1/(.*)/${1:/upcase}/} > ${1/(.*)/${1:/downcase}/}"
	//     // simpler version below works too
	//     "body": "${1} -> ${1/(.*)/${1:/capitalize}/}"
	// },
	"route": {
		"prefix": "route",
		"body": [
			"$0import auth from '../../app/middlewares/auth';",
			"import ${1/(.*)/${1:/capitalize}/}Controller from '../../app/controllers/${1/(.*)/${1:/capitalize}/}Controller';",
			"import validate${1/(.*)/${1:/capitalize}/}Store from '../../app/validators/${1/(.*)/${1:/capitalize}/}Store';",
			"",
			"export default function(routes) {",
			"  const route = '/${1/(.*)/${1:/downcase}/}';",
			"  routes.get(route, auth, index);",
			"  routes.post(route, validate${1/(.*)/${1:/capitalize}/}Store, ${1/(.*)/${1:/capitalize}/}Controller.store);",
			"  routes.put(route, auth, ${1/(.*)/${1:/capitalize}/}Controller.update);",
			"  routes.get(`\\${route}/:id`, auth, ${1/(.*)/${1:/capitalize}/}Controller.show);",
			"  routes.delete(`\\${route}/:id`, auth, ${1/(.*)/${1:/capitalize}/}Controller.destroy);",
			"}"
		]
	}
}